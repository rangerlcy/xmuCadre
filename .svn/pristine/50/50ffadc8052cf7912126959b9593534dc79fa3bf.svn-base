<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <!-- 自动扫描(自动注入) Spring security所需要的类-->
    <context:component-scan base-package="com.cadre.security" />
    
    <http pattern="/resources/**" security="none"></http>
    <http pattern="/login.jsp*" security="none" ></http>
    <http pattern="/preLogin.do*" security="none" ></http>
    <http pattern="/image.jsp*" security="none" ></http>
   <!--  <http pattern="/common/login.jsp*" security="none" ></http> -->
	<!-- auto-config = true 则使用from-login. 如果不使用该属性 则默认为http-basic(没有session). 
		access-denied-page:出错后跳转到的错误页面; -->
	<http auto-config="true" entry-point-ref="entryPoint">
		<!-- intercept-url:拦截器,可以设定哪些路径需要哪些权限来访问. filters=none 不使用过滤,也可以理解为忽略 -->
		<intercept-url pattern="/**" access="ROLE_USER" />

		<!-- session-management是针对session的管理. 这里可以不配置. 如有需求可以配置. -->
		<!-- id登陆唯一. 后登陆的账号会挤掉第一次登陆的账号 error-if-maximum-exceeded="true" 禁止2次登陆; 
			session-fixation-protection="none" 防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session. 
			创建新的session,并把用户信息复制到新session中. -->
		<session-management  session-fixation-protection="none" invalid-session-url="/preLogin.do" session-authentication-error-url="/preLogin.do">
			<concurrency-control expired-url="/preLogin.do" max-sessions="1" />
		</session-management>

		<!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 -->
		<!-- authentication-failure-url="/common/login.jsp"  -->
		<!-- 如果要用ajax登录，可改成转到spring mvc 的controller ，这样就可以用controller以json格式写出一些信息。 -->
		<!-- authentication-success-handler-ref -->
		<form-login login-page="/login.jsp" default-target-url="/index.do" always-use-default-target="true"/>
        <form-login/>
		<!-- logout-success-url:成功注销后跳转到的页面; -->
		<logout logout-success-url="/preLogin.do" />
		<http-basic />
	</http>

    <beans:bean id="entryPoint" class="com.cadre.security.entrypoint.MyCasAuthenticationEntryPoint"/> 
    <beans:bean id="messageResource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
        <beans:property name="basenames" value="classpath:/org/springframework/security/messages_zh_CN"></beans:property>
    </beans:bean>
	<!-- 权限管理操作 -->
	<authentication-manager>
		<authentication-provider ref="loginAuthenticationProvider" />
	</authentication-manager>
</beans:beans>