<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name></display-name>	
    
    <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webroot1</param-value>
	</context-param>
    
  	<!-- 加载Spring 及  security的配置文件	-->
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/applicationContext*.xml</param-value>
	</context-param>
	
	<!-- Spring的log4j监听器	 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--设置不使用缓存的过滤器配置  start -->
	<filter>
		<filter-name>ClearCacheFilter</filter-name>
		<filter-class>com.cadre.model.filter.ClearCacheFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ClearCacheFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ClearCacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!--设置不使用缓存的过滤器配置 end -->
	
	<!-- SpringSecurity  的session监听器-->
	<listener>  
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>  
    </listener> 
	<!-- 字符集 过滤器  start -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- 字符集 过滤器  end -->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- CheckCode过滤器 -->
	<filter>
		<filter-name>CheckCodeFilterChain</filter-name>  
        <filter-class>com.cadre.model.filter.CheckCodeCacheFilter</filter-class>
	</filter>
	<filter-mapping>  
        <filter-name>CheckCodeFilterChain</filter-name>  
        <url-pattern>/j_spring_security_check</url-pattern>  
    </filter-mapping>
	<!-- SpringSecurity权限框架  start-->  
	<filter>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
   <filter-mapping>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
    <!-- SpringSecurity权限框架  end-->
    
    
    <!-- 2015 8 9 陈俊良加  为解决could not initialize proxy - no Session问题  参照网上教程-->
    <filter>
   			<filter-name>OpenSessionInView</filter-name>
   			<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>

	<filter-mapping>
    		<filter-name>OpenSessionInView</filter-name>
    		<url-pattern>/*</url-pattern>       
	</filter-mapping>
	<!-- 2015 8 9   end-->
	
    
     
	<!-- Spring view分发器   start-->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/dispatcher-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- Spring view分发器   end-->
	<error-page>
        <error-code>404</error-code>
        <location>/common/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/common/500.jsp</location>
    </error-page>
	<session-config>
	   <session-timeout>30</session-timeout>
	</session-config>
    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
</web-app>
